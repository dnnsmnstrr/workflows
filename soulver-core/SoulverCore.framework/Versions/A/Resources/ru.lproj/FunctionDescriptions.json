{
  "percentage": [
    {
      "prototypeExpressions": [
        "10% от 100",
        "10% из 100"
      ],
      "identifier": "percentOf"
    },
    {
      "prototypeExpressions": [
        "10% к 100"
      ],
      "identifier": "percentOn"
    },
    {
      "prototypeExpressions": [
        "30 это 20% от чего",
        "30 это 20% от"
      ],
      "identifier": "isPercentOfWhat"
    },
    {
      "prototypeExpressions": [
        "20% от чего равно 30"
      ],
      "identifier": "isPercentOfWhatClassic"
    },
    {
      "prototypeExpressions": [
        "30 это 20% отняли от"
      ],
      "identifier": "isPercentOffWhat"
    },
    {
      "prototypeExpressions": [
        "20% из чего равно 30"
      ],
      "identifier": "isPercentOffWhatClassic"
    },
    {
      "prototypeExpressions": [
        "30 это 20% к чему",
        "30 это 20% к"
      ],
      "identifier": "isPercentOnWhat"
    },
    {
      "prototypeExpressions": [
        "20% к чему равно 30"
      ],
      "identifier": "isPercentOnWhatClassic"
    },
    {
      "prototypeExpressions": [
        "10 как % от 20",
        "10 сколько % от 20",
        "10 сколько процентов от 20"
      ],
      "identifier": "isWhatPercentOf"
    },
    {
      "prototypeExpressions": [
        "10 сколько % отняли от 20",
        "10 сколько процентов отняли от 20"
      ],
      "identifier": "isWhatPercentOff"
    },
    {
      "prototypeExpressions": [
        "20 сколько % сверх 10",
        "20 сколько процентов сверх 10"
      ],
      "identifier": "isWhatPercentOn"
    }
  ],
  "general": [
    {
      "prototypeExpressions": [
        "остаток от 20 разделенного на 3"
      ],
      "identifier": "remainder"
    },
    {
      "prototypeExpressions": [
        "половина 20"
      ],
      "identifier": "halfOf"
    },
    {
      "prototypeExpressions": [
        "меньшее из 2 и 30"
      ],
      "identifier": "lesserOf"
    },
    {
      "prototypeExpressions": [
        "большее из 2 и 30"
      ],
      "identifier": "greaterOf"
    },
    {
      "prototypeExpressions": [
        "среднее между 2 и 32"
      ],
      "identifier": "midpoint"
    },
    {
      "prototypeExpressions": [
        "6 к 600 как что к 8",
        "6 к 600 это как что к 8"
      ],
      "identifier": "proportionsFindNumerator"
    },
    {
      "prototypeExpressions": [
        "6 к 600 как 8 к чему",
        "6 к 600 это как 8 к чему"
      ],
      "identifier": "proportionsFindDenominator"
    },
    {
      "prototypeExpressions": [
        "случайное число между 1 и 5",
        "рандомное число между 1 и 5",
        "число между 1 и 5"
      ],
      "identifier": "makeRandomNumber"
    }
  ],
  "unitRelated": [
    {
      "prototypeExpressions": [
        "__unit в __unit_expression"
      ],
      "identifier": "unitInUnitExpression"
    },
    {
      "prototypeExpressions": [
        "__unit в __timespan"
      ],
      "identifier": "unitInTimespan"
    }
  ],
  "datetime": [
    {
      "prototypeExpressions": [
        "__unit от __datestamp до __datestamp",
        "__unit между __datestamp и __datestamp",
        "__unit с __datestamp по __datestamp"
      ],
      "identifier": "calendarUnitBetweenDates"
    },
    {
      "prototypeExpressions": [
        "__unit до __datestamp"
      ],
      "identifier": "calendarUnitToDate"
    },
    {
      "prototypeExpressions": [
        "__datestamp до __datestamp",
        "__datestamp по __datestamp"
      ],
      "identifier": "intervalBetweenDates"
    },
    {
      "prototypeExpressions": [
        "__timestamp до __timestamp",
        "__timestamp по __timestamp"
      ],
      "identifier": "intervalBetweenTimestamps"
    },
    {
      "prototypeExpressions": [
        "__timespan назад",
        "__timespan тому назад",
      ],
      "identifier": "calendarUnitExpressionAgo"
    },
    {
      "prototypeExpressions": [
        "__unit с __datestamp"
      ],
      "identifier": "calendarUnitSinceDate"
    },
    {
      "prototypeExpressions": [
        "новая метка времени"
      ],
      "identifier": "generateTimestamp"
    },
    {
      "prototypeExpressions": [
        "__timespan после __datestamp"
      ],
      "identifier": "calendarUnitExpressionAfterDate"
    },
    {
      "prototypeExpressions": [
        "__timespan до __datestamp"
      ],
      "identifier": "calendarUnitExpressionBeforeDate"
    },
    {
      "identifier": "timeInTimezone",
      "prototypeExpressions": [
        "__timezone время",
        "время __timezone",
        "время в __timezone"
      ]
    },
    {
      "prototypeExpressions": [
        "разница во времени между __timezone и __timezone",
        "разница __timezone и __timezone"
      ],
      "identifier": "differenceBetweenTimezones"
    }
  ]
}
